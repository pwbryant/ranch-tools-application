# .github/workflows/build-release.yml
name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install Node.js dependencies
        working-directory: ./electron_wrapper
        shell: bash
        run: |
          echo "Current directory:"
          pwd
          echo "Files in current directory:"
          ls -la
          echo "Running npm ci..."
          npm ci
      
      - name: Download Python embeddable (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: ./electron_wrapper
        shell: bash
        run: |
          mkdir python-embed
          curl -o python-embed.zip https://www.python.org/ftp/python/3.9.13/python-3.9.13-embed-amd64.zip
          unzip python-embed.zip -d python-embed
          curl -o python-embed/get-pip.py https://bootstrap.pypa.io/get-pip.py
          
      - name: Setup Python embeddable (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: ./electron_wrapper/python-embed
        shell: powershell
        run: |
          # Enable pip by uncommenting import site
          (Get-Content python39._pth) | ForEach-Object { $_ -replace '#import site', 'import site' } | Set-Content python39._pth
          # Install pip
          .\python.exe get-pip.py
          # Install Django requirements
          .\python.exe -m pip install --target . -r ..\..\django_project\requirements.txt
      
      - name: Download Python for macOS
        if: matrix.os == 'macos-latest'
        working-directory: ./electron_wrapper
        shell: bash
        run: |
          mkdir -p python-embed/bin
          # Download Python framework installer
          curl -o python-installer.pkg https://www.python.org/ftp/python/3.9.13/python-3.9.13-macos11.pkg
          sudo installer -pkg python-installer.pkg -target /
          # Copy Python to embed directory
          cp -r /Library/Frameworks/Python.framework/Versions/3.9/* python-embed/
      
      - name: Install Python packages (macOS)
        if: matrix.os == 'macos-latest'
        working-directory: ./electron_wrapper/python-embed
        shell: bash
        run: |
          ./bin/python3 -m pip install --target ./lib/python3.9/site-packages -r ../../django_project/requirements.txt
      
      - name: Update main.js for cross-platform
        working-directory: ./electron_wrapper
        shell: bash
        run: |
          node -e "
          const fs = require('fs');
          let content = fs.readFileSync('main.js', 'utf8');
          
          // Replace Python path logic
          const oldPath = /const PYTHON_PATH = isDev[^;]+;/s;
          const newPath = \`const PYTHON_PATH = isDev 
              ? (process.platform === 'win32' 
                  ? path.join(__dirname, 'python-embed', 'python.exe')
                  : path.join(__dirname, 'python-embed', 'bin', 'python3'))
              : (process.platform === 'win32'
                  ? path.join(process.resourcesPath, 'python-embed', 'python.exe') 
                  : path.join(process.resourcesPath, 'python-embed', 'bin', 'python3'));\`;
          
          content = content.replace(oldPath, newPath);
          fs.writeFileSync('main.js', content);
          "
      
      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: ./electron_wrapper
        shell: bash
        run: npm run build-win

      - name: Fix macOS permissions
        if: matrix.os == 'macos-latest'
        working-directory: ./electron_wrapper
        shell: bash
        run: |
          chmod -R 755 python-embed/bin/* || true
          chmod -R 755 django_project || true

      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        working-directory: ./electron_wrapper
        shell: bash
        run: npm run build-mac
        
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ranch-tools-windows
          path: electron_wrapper/dist/*.exe
      
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ranch-tools-macos
          path: electron_wrapper/dist/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: ranch-tools-windows
          path: ./windows-release
      
      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: ranch-tools-macos
          path: ./macos-release
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./windows-release/*
            ./macos-release/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}  # Use a personal access token with repo scope